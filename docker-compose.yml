services:
  # backend:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #   container_name: backend
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_NAME=postgres
  #     - REDIS_ADDR=redis:6379
  #     - JWT_SECRET=test
  #   depends_on:
  #     - postgres
  #     - redis
      
  # nginx:
  #   image: nginx:1.27
  #   container_name: logify_nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - backend

  # postgres:
  #   image: postgres:latest
  #   container_name: logify_postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # redis:
  #   image: redis:latest
  #   container_name: logify_redis
  #   ports:
  #     - "6371:6379"
  #   volumes:
  #     - redis_data:/data
  
  kafka:
    image: apache/kafka:3.9.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CLUSTER_ID: "LiKR6NrNSY2PVkX7d9kBiw"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - logging-network
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - kafka
    networks:
      - logging-network

  fluent-bit:
    image: fluent/fluent-bit:latest
    container_name: fluent-bit
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./logs:/var/log:ro
    ports:
      - "24224:24224"
    networks:
      - logging-network
  
  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/var/lib/elasticsearch
    networks:
      - logging-network
  
networks:
  logging-network:
    driver: bridge

volumes:
  elasticsearch_data:
  kafka_data:
  postgres_data:
  redis_data: